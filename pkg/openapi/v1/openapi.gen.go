// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package v1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for BookingStatus.
const (
	BookingStatusCancelled BookingStatus = "cancelled"
	BookingStatusCompleted BookingStatus = "completed"
	BookingStatusConfirmed BookingStatus = "confirmed"
	BookingStatusOngoing   BookingStatus = "ongoing"
	BookingStatusPending   BookingStatus = "pending"
)

// Defines values for BookingType.
const (
	Package12 BookingType = "package_12"
	Package4  BookingType = "package_4"
	Package8  BookingType = "package_8"
	Single    BookingType = "single"
	Trial     BookingType = "trial"
)

// Defines values for BusinessType.
const (
	ArtStudio       BusinessType = "art_studio"
	IndividualCoach BusinessType = "individual_coach"
	SwimmingSchool  BusinessType = "swimming_school"
	TutoringCenter  BusinessType = "tutoring_center"
)

// Defines values for ClassType.
const (
	ClassTypeLargeGroup ClassType = "large_group"
	ClassTypePrivate    ClassType = "private"
	ClassTypeSmallGroup ClassType = "small_group"
)

// Defines values for CoachStatus.
const (
	CoachStatusActive   CoachStatus = "active"
	CoachStatusInactive CoachStatus = "inactive"
)

// Defines values for Gender.
const (
	Female Gender = "female"
	Male   Gender = "male"
)

// Defines values for PaymentStatus.
const (
	PaymentStatusExpired  PaymentStatus = "expired"
	PaymentStatusFailed   PaymentStatus = "failed"
	PaymentStatusPending  PaymentStatus = "pending"
	PaymentStatusRefunded PaymentStatus = "refunded"
	PaymentStatusSuccess  PaymentStatus = "success"
)

// Defines values for PaymentStatusEnum.
const (
	Paid     PaymentStatusEnum = "paid"
	Refunded PaymentStatusEnum = "refunded"
	Unpaid   PaymentStatusEnum = "unpaid"
)

// Defines values for ServiceDetailCoachesStatus.
const (
	ServiceDetailCoachesStatusActive   ServiceDetailCoachesStatus = "active"
	ServiceDetailCoachesStatusInactive ServiceDetailCoachesStatus = "inactive"
)

// Defines values for ServiceStatus.
const (
	ServiceStatusActive   ServiceStatus = "active"
	ServiceStatusDraft    ServiceStatus = "draft"
	ServiceStatusInactive ServiceStatus = "inactive"
)

// Defines values for SessionStatus.
const (
	Cancelled SessionStatus = "cancelled"
	Completed SessionStatus = "completed"
	NoShow    SessionStatus = "no_show"
	Scheduled SessionStatus = "scheduled"
)

// Defines values for SkillLevel.
const (
	SkillLevelAdvanced     SkillLevel = "advanced"
	SkillLevelAllLevels    SkillLevel = "all_levels"
	SkillLevelBeginner     SkillLevel = "beginner"
	SkillLevelIntermediate SkillLevel = "intermediate"
)

// Defines values for UserRole.
const (
	UserRoleAdmin  UserRole = "admin"
	UserRoleCoach  UserRole = "coach"
	UserRoleParent UserRole = "parent"
	UserRoleVendor UserRole = "vendor"
)

// Defines values for UserStatus.
const (
	UserStatusActive    UserStatus = "active"
	UserStatusInactive  UserStatus = "inactive"
	UserStatusSuspended UserStatus = "suspended"
)

// Defines values for VendorStatus.
const (
	Active    VendorStatus = "active"
	Pending   VendorStatus = "pending"
	Rejected  VendorStatus = "rejected"
	Suspended VendorStatus = "suspended"
)

// Defines values for ClassTypeParam.
const (
	ClassTypeParamLargeGroup ClassTypeParam = "large_group"
	ClassTypeParamPrivate    ClassTypeParam = "private"
	ClassTypeParamSmallGroup ClassTypeParam = "small_group"
)

// Defines values for DayParam.
const (
	DayParamFriday    DayParam = "friday"
	DayParamMonday    DayParam = "monday"
	DayParamSaturday  DayParam = "saturday"
	DayParamSunday    DayParam = "sunday"
	DayParamThursday  DayParam = "thursday"
	DayParamTuesday   DayParam = "tuesday"
	DayParamWednesday DayParam = "wednesday"
)

// Defines values for PeriodParam.
const (
	PeriodParamDay   PeriodParam = "day"
	PeriodParamMonth PeriodParam = "month"
	PeriodParamWeek  PeriodParam = "week"
	PeriodParamYear  PeriodParam = "year"
)

// Defines values for SkillLevelParam.
const (
	SkillLevelParamAdvanced     SkillLevelParam = "advanced"
	SkillLevelParamAllLevels    SkillLevelParam = "all_levels"
	SkillLevelParamBeginner     SkillLevelParam = "beginner"
	SkillLevelParamIntermediate SkillLevelParam = "intermediate"
)

// Defines values for GetStatisticsParamsPeriod.
const (
	GetStatisticsParamsPeriodDay   GetStatisticsParamsPeriod = "day"
	GetStatisticsParamsPeriodMonth GetStatisticsParamsPeriod = "month"
	GetStatisticsParamsPeriodWeek  GetStatisticsParamsPeriod = "week"
	GetStatisticsParamsPeriodYear  GetStatisticsParamsPeriod = "year"
)

// Defines values for SearchServicesParamsSkillLevel.
const (
	Advanced     SearchServicesParamsSkillLevel = "advanced"
	AllLevels    SearchServicesParamsSkillLevel = "all_levels"
	Beginner     SearchServicesParamsSkillLevel = "beginner"
	Intermediate SearchServicesParamsSkillLevel = "intermediate"
)

// Defines values for SearchServicesParamsClassType.
const (
	LargeGroup SearchServicesParamsClassType = "large_group"
	Private    SearchServicesParamsClassType = "private"
	SmallGroup SearchServicesParamsClassType = "small_group"
)

// Defines values for SearchServicesParamsDay.
const (
	SearchServicesParamsDayFriday    SearchServicesParamsDay = "friday"
	SearchServicesParamsDayMonday    SearchServicesParamsDay = "monday"
	SearchServicesParamsDaySaturday  SearchServicesParamsDay = "saturday"
	SearchServicesParamsDaySunday    SearchServicesParamsDay = "sunday"
	SearchServicesParamsDayThursday  SearchServicesParamsDay = "thursday"
	SearchServicesParamsDayTuesday   SearchServicesParamsDay = "tuesday"
	SearchServicesParamsDayWednesday SearchServicesParamsDay = "wednesday"
)

// AvailableDate defines model for AvailableDate.
type AvailableDate struct {
	Date  *openapi_types.Date `json:"date,omitempty"`
	Slots *[]struct {
		AvailableSlots *int `json:"available_slots,omitempty"`
		Coach          *struct {
			Id   *int64  `json:"id,omitempty"`
			Name *string `json:"name,omitempty"`
		} `json:"coach,omitempty"`
		EndTime    *string `json:"end_time,omitempty"`
		ScheduleId *int64  `json:"schedule_id,omitempty"`
		StartTime  *string `json:"start_time,omitempty"`
	} `json:"slots,omitempty"`
}

// Booking defines model for Booking.
type Booking struct {
	BookingNumber *string      `json:"booking_number,omitempty"`
	BookingType   *BookingType `json:"booking_type,omitempty"`
	Child         *Child       `json:"child,omitempty"`
	Coach         *struct {
		FullName *string `json:"full_name,omitempty"`
		Id       *int64  `json:"id,omitempty"`
		Photo    *string `json:"photo,omitempty"`
	} `json:"coach,omitempty"`
	CompletedSessions *int       `json:"completed_sessions,omitempty"`
	CreatedAt         *time.Time `json:"created_at,omitempty"`
	Id                *int64     `json:"id,omitempty"`
	NextSession       *struct {
		EndTime     *string             `json:"end_time,omitempty"`
		SessionDate *openapi_types.Date `json:"session_date,omitempty"`
		StartTime   *string             `json:"start_time,omitempty"`
	} `json:"next_session,omitempty"`
	PaymentStatus *PaymentStatusEnum `json:"payment_status,omitempty"`
	Service       *struct {
		Category *string `json:"category,omitempty"`
		Id       *int64  `json:"id,omitempty"`
		Name     *string `json:"name,omitempty"`
	} `json:"service,omitempty"`
	Status        *BookingStatus `json:"status,omitempty"`
	TotalAmount   *float64       `json:"total_amount,omitempty"`
	TotalSessions *int           `json:"total_sessions,omitempty"`
	Vendor        *struct {
		BusinessName *string `json:"business_name,omitempty"`
		Id           *int64  `json:"id,omitempty"`
		Logo         *string `json:"logo,omitempty"`
	} `json:"vendor,omitempty"`
}

// BookingDetail defines model for BookingDetail.
type BookingDetail struct {
	BookingNumber *string      `json:"booking_number,omitempty"`
	BookingType   *BookingType `json:"booking_type,omitempty"`
	Child         *Child       `json:"child,omitempty"`
	Coach         *struct {
		FullName *string `json:"full_name,omitempty"`
		Id       *int64  `json:"id,omitempty"`
		Photo    *string `json:"photo,omitempty"`
	} `json:"coach,omitempty"`
	CompletedSessions *int       `json:"completed_sessions,omitempty"`
	CreatedAt         *time.Time `json:"created_at,omitempty"`
	Id                *int64     `json:"id,omitempty"`
	NextSession       *struct {
		EndTime     *string             `json:"end_time,omitempty"`
		SessionDate *openapi_types.Date `json:"session_date,omitempty"`
		StartTime   *string             `json:"start_time,omitempty"`
	} `json:"next_session,omitempty"`
	ParentNotes   *string            `json:"parent_notes,omitempty"`
	Payment       *Payment           `json:"payment,omitempty"`
	PaymentStatus *PaymentStatusEnum `json:"payment_status,omitempty"`
	Service       *struct {
		Category *string `json:"category,omitempty"`
		Id       *int64  `json:"id,omitempty"`
		Name     *string `json:"name,omitempty"`
	} `json:"service,omitempty"`
	Sessions      *[]BookingSession `json:"sessions,omitempty"`
	Status        *BookingStatus    `json:"status,omitempty"`
	TotalAmount   *float64          `json:"total_amount,omitempty"`
	TotalSessions *int              `json:"total_sessions,omitempty"`
	Vendor        *struct {
		BusinessName *string `json:"business_name,omitempty"`
		Id           *int64  `json:"id,omitempty"`
		Logo         *string `json:"logo,omitempty"`
	} `json:"vendor,omitempty"`
}

// BookingSession defines model for BookingSession.
type BookingSession struct {
	Attended      *bool               `json:"attended,omitempty"`
	CoachNotes    *string             `json:"coach_notes,omitempty"`
	CompletedAt   *time.Time          `json:"completed_at,omitempty"`
	EndTime       *string             `json:"end_time,omitempty"`
	Id            *int64              `json:"id,omitempty"`
	Rating        *int                `json:"rating,omitempty"`
	SessionDate   *openapi_types.Date `json:"session_date,omitempty"`
	SessionNumber *int                `json:"session_number,omitempty"`
	StartTime     *string             `json:"start_time,omitempty"`
	Status        *SessionStatus      `json:"status,omitempty"`
}

// BookingStatus defines model for BookingStatus.
type BookingStatus string

// BookingType defines model for BookingType.
type BookingType string

// BusinessType defines model for BusinessType.
type BusinessType string

// Category defines model for Category.
type Category struct {
	ColorHex     *string `json:"color_hex,omitempty"`
	Description  *string `json:"description,omitempty"`
	DisplayOrder *int    `json:"display_order,omitempty"`
	Icon         *string `json:"icon,omitempty"`
	Id           *int64  `json:"id,omitempty"`
	Name         *string `json:"name,omitempty"`
	Slug         *string `json:"slug,omitempty"`
}

// Child defines model for Child.
type Child struct {
	Age          *int                `json:"age,omitempty"`
	CreatedAt    *time.Time          `json:"created_at,omitempty"`
	DateOfBirth  *openapi_types.Date `json:"date_of_birth,omitempty"`
	Gender       *Gender             `json:"gender,omitempty"`
	Id           *int64              `json:"id,omitempty"`
	Name         *string             `json:"name,omitempty"`
	Nickname     *string             `json:"nickname,omitempty"`
	Photo        *string             `json:"photo,omitempty"`
	SpecialNeeds *string             `json:"special_needs,omitempty"`
}

// ClassType defines model for ClassType.
type ClassType string

// Coach defines model for Coach.
type Coach struct {
	Bio            *string `json:"bio,omitempty"`
	Certifications *[]struct {
		FileUrl *string `json:"file_url,omitempty"`
		Issuer  *string `json:"issuer,omitempty"`
		Name    *string `json:"name,omitempty"`
		Year    *int    `json:"year,omitempty"`
	} `json:"certifications,omitempty"`
	Education       *string      `json:"education,omitempty"`
	ExperienceYears *int         `json:"experience_years,omitempty"`
	FullName        *string      `json:"full_name,omitempty"`
	Id              *int64       `json:"id,omitempty"`
	IsFeatured      *bool        `json:"is_featured,omitempty"`
	Photo           *string      `json:"photo,omitempty"`
	Specializations *[]string    `json:"specializations,omitempty"`
	Status          *CoachStatus `json:"status,omitempty"`
}

// CoachStatus defines model for Coach.Status.
type CoachStatus string

// DefaultErrorResponse defines model for DefaultErrorResponse.
type DefaultErrorResponse struct {
	Error struct {
		Code    *string `json:"code,omitempty"`
		Details *[]struct {
			Field   *string `json:"field,omitempty"`
			Message *string `json:"message,omitempty"`
		} `json:"details,omitempty"`
		Message string `json:"message"`
	} `json:"error"`
}

// Gender defines model for Gender.
type Gender string

// Pagination defines model for Pagination.
type Pagination struct {
	Limit      *int `json:"limit,omitempty"`
	Page       *int `json:"page,omitempty"`
	Total      *int `json:"total,omitempty"`
	TotalPages *int `json:"total_pages,omitempty"`
}

// Payment defines model for Payment.
type Payment struct {
	Amount        *float64       `json:"amount,omitempty"`
	ExpiredAt     *time.Time     `json:"expired_at,omitempty"`
	PaidAt        *time.Time     `json:"paid_at,omitempty"`
	PaymentMethod *string        `json:"payment_method,omitempty"`
	PaymentNumber *string        `json:"payment_number,omitempty"`
	PaymentUrl    *string        `json:"payment_url,omitempty"`
	Status        *PaymentStatus `json:"status,omitempty"`
}

// PaymentStatus defines model for Payment.Status.
type PaymentStatus string

// PaymentMethod defines model for PaymentMethod.
type PaymentMethod struct {
	Code           *string   `json:"code,omitempty"`
	Icon           *string   `json:"icon,omitempty"`
	Name           *string   `json:"name,omitempty"`
	Options        *[]string `json:"options,omitempty"`
	ProcessingTime *string   `json:"processing_time,omitempty"`
}

// PaymentStatusEnum defines model for PaymentStatusEnum.
type PaymentStatusEnum string

// Review defines model for Review.
type Review struct {
	ChildAge       *int       `json:"child_age,omitempty"`
	ChildEnjoyed   *bool      `json:"child_enjoyed,omitempty"`
	CreatedAt      *time.Time `json:"created_at,omitempty"`
	Id             *int64     `json:"id,omitempty"`
	ParentName     *string    `json:"parent_name,omitempty"`
	Photos         *[]string  `json:"photos,omitempty"`
	Rating         *int       `json:"rating,omitempty"`
	RespondedAt    *time.Time `json:"responded_at,omitempty"`
	ReviewText     *string    `json:"review_text,omitempty"`
	VendorResponse *string    `json:"vendor_response,omitempty"`
	WouldRecommend *bool      `json:"would_recommend,omitempty"`
}

// ReviewSummary defines model for ReviewSummary.
type ReviewSummary struct {
	AverageRating          *float64 `json:"average_rating,omitempty"`
	ChildEnjoyedPercentage *float64 `json:"child_enjoyed_percentage,omitempty"`
	RatingDistribution     *struct {
		N1 *int `json:"1,omitempty"`
		N2 *int `json:"2,omitempty"`
		N3 *int `json:"3,omitempty"`
		N4 *int `json:"4,omitempty"`
		N5 *int `json:"5,omitempty"`
	} `json:"rating_distribution,omitempty"`
	TotalReviews             *int     `json:"total_reviews,omitempty"`
	WouldRecommendPercentage *float64 `json:"would_recommend_percentage,omitempty"`
}

// Schedule defines model for Schedule.
type Schedule struct {
	AvailableSlots *int `json:"available_slots,omitempty"`
	Coach          *struct {
		Id   *int64  `json:"id,omitempty"`
		Name *string `json:"name,omitempty"`
	} `json:"coach,omitempty"`
	DayName   *string `json:"day_name,omitempty"`
	DayOfWeek *int    `json:"day_of_week,omitempty"`
	EndTime   *string `json:"end_time,omitempty"`
	Id        *int64  `json:"id,omitempty"`
	StartTime *string `json:"start_time,omitempty"`
}

// Service defines model for Service.
type Service struct {
	AgeMax          *int           `json:"age_max,omitempty"`
	AgeMin          *int           `json:"age_min,omitempty"`
	AgeRange        *string        `json:"age_range,omitempty"`
	ClassType       *ClassType     `json:"class_type,omitempty"`
	Description     *string        `json:"description,omitempty"`
	DurationMinutes *int           `json:"duration_minutes,omitempty"`
	Id              *int64         `json:"id,omitempty"`
	IsFeatured      *bool          `json:"is_featured,omitempty"`
	MaxParticipants *int           `json:"max_participants,omitempty"`
	Name            *string        `json:"name,omitempty"`
	Package12Price  *float64       `json:"package_12_price,omitempty"`
	Package4Price   *float64       `json:"package_4_price,omitempty"`
	Package8Price   *float64       `json:"package_8_price,omitempty"`
	PricePerSession *float64       `json:"price_per_session,omitempty"`
	Requirements    *string        `json:"requirements,omitempty"`
	SkillLevel      *SkillLevel    `json:"skill_level,omitempty"`
	Status          *ServiceStatus `json:"status,omitempty"`
	TrialPrice      *float64       `json:"trial_price,omitempty"`
	WhatWillLearn   *string        `json:"what_will_learn,omitempty"`
}

// ServiceDetail defines model for ServiceDetail.
type ServiceDetail struct {
	AgeMax    *int       `json:"age_max,omitempty"`
	AgeMin    *int       `json:"age_min,omitempty"`
	AgeRange  *string    `json:"age_range,omitempty"`
	ClassType *ClassType `json:"class_type,omitempty"`
	Coaches   *[]struct {
		Bio            *string `json:"bio,omitempty"`
		Certifications *[]struct {
			FileUrl *string `json:"file_url,omitempty"`
			Issuer  *string `json:"issuer,omitempty"`
			Name    *string `json:"name,omitempty"`
			Year    *int    `json:"year,omitempty"`
		} `json:"certifications,omitempty"`
		Education       *string                     `json:"education,omitempty"`
		ExperienceYears *int                        `json:"experience_years,omitempty"`
		FullName        *string                     `json:"full_name,omitempty"`
		Id              *int64                      `json:"id,omitempty"`
		IsFeatured      *bool                       `json:"is_featured,omitempty"`
		IsPrimary       *bool                       `json:"is_primary,omitempty"`
		Photo           *string                     `json:"photo,omitempty"`
		Specializations *[]string                   `json:"specializations,omitempty"`
		Status          *ServiceDetailCoachesStatus `json:"status,omitempty"`
	} `json:"coaches,omitempty"`
	Description     *string  `json:"description,omitempty"`
	DurationMinutes *int     `json:"duration_minutes,omitempty"`
	Id              *int64   `json:"id,omitempty"`
	IsFeatured      *bool    `json:"is_featured,omitempty"`
	MaxParticipants *int     `json:"max_participants,omitempty"`
	Name            *string  `json:"name,omitempty"`
	Package12Price  *float64 `json:"package_12_price,omitempty"`
	Package4Price   *float64 `json:"package_4_price,omitempty"`
	Package8Price   *float64 `json:"package_8_price,omitempty"`
	PricePerSession *float64 `json:"price_per_session,omitempty"`
	Pricing         *struct {
		Package12 *float64 `json:"package_12,omitempty"`
		Package4  *float64 `json:"package_4,omitempty"`
		Package8  *float64 `json:"package_8,omitempty"`
		Single    *float64 `json:"single,omitempty"`
		Trial     *float64 `json:"trial,omitempty"`
	} `json:"pricing,omitempty"`
	Requirements   *string        `json:"requirements,omitempty"`
	ReviewsPreview *[]Review      `json:"reviews_preview,omitempty"`
	Schedules      *[]Schedule    `json:"schedules,omitempty"`
	SkillLevel     *SkillLevel    `json:"skill_level,omitempty"`
	Status         *ServiceStatus `json:"status,omitempty"`
	TrialPrice     *float64       `json:"trial_price,omitempty"`
	Vendor         *Vendor        `json:"vendor,omitempty"`
	WhatWillLearn  *string        `json:"what_will_learn,omitempty"`
}

// ServiceDetailCoachesStatus defines model for ServiceDetail.Coaches.Status.
type ServiceDetailCoachesStatus string

// ServiceStatus defines model for ServiceStatus.
type ServiceStatus string

// ServiceWithVendor defines model for ServiceWithVendor.
type ServiceWithVendor struct {
	AgeMax          *int                `json:"age_max,omitempty"`
	AgeMin          *int                `json:"age_min,omitempty"`
	AgeRange        *string             `json:"age_range,omitempty"`
	AvailableDays   *[]string           `json:"available_days,omitempty"`
	Category        *Category           `json:"category,omitempty"`
	ClassType       *ClassType          `json:"class_type,omitempty"`
	Description     *string             `json:"description,omitempty"`
	DistanceKm      *float64            `json:"distance_km,omitempty"`
	DurationMinutes *int                `json:"duration_minutes,omitempty"`
	Id              *int64              `json:"id,omitempty"`
	IsFeatured      *bool               `json:"is_featured,omitempty"`
	MaxParticipants *int                `json:"max_participants,omitempty"`
	Name            *string             `json:"name,omitempty"`
	NextAvailable   *openapi_types.Date `json:"next_available,omitempty"`
	Package12Price  *float64            `json:"package_12_price,omitempty"`
	Package4Price   *float64            `json:"package_4_price,omitempty"`
	Package8Price   *float64            `json:"package_8_price,omitempty"`
	PricePerSession *float64            `json:"price_per_session,omitempty"`
	Requirements    *string             `json:"requirements,omitempty"`
	SkillLevel      *SkillLevel         `json:"skill_level,omitempty"`
	Status          *ServiceStatus      `json:"status,omitempty"`
	TrialPrice      *float64            `json:"trial_price,omitempty"`
	Vendor          *Vendor             `json:"vendor,omitempty"`
	WhatWillLearn   *string             `json:"what_will_learn,omitempty"`
}

// SessionStatus defines model for SessionStatus.
type SessionStatus string

// SkillLevel defines model for SkillLevel.
type SkillLevel string

// Statistics defines model for Statistics.
type Statistics struct {
	ActiveBookings   *int     `json:"active_bookings,omitempty"`
	CommissionEarned *float64 `json:"commission_earned,omitempty"`
	Growth           *struct {
		Bookings *string `json:"bookings,omitempty"`
		Revenue  *string `json:"revenue,omitempty"`
		Users    *string `json:"users,omitempty"`
	} `json:"growth,omitempty"`
	PopularCategories *[]struct {
		Name          *string  `json:"name,omitempty"`
		Percentage    *float64 `json:"percentage,omitempty"`
		TotalBookings *int     `json:"total_bookings,omitempty"`
	} `json:"popular_categories,omitempty"`
	TotalBookings *int     `json:"total_bookings,omitempty"`
	TotalCoaches  *int     `json:"total_coaches,omitempty"`
	TotalParents  *int     `json:"total_parents,omitempty"`
	TotalRevenue  *float64 `json:"total_revenue,omitempty"`
	TotalUsers    *int     `json:"total_users,omitempty"`
	TotalVendors  *int     `json:"total_vendors,omitempty"`
}

// User defines model for User.
type User struct {
	CreatedAt *time.Time  `json:"created_at,omitempty"`
	Email     *string     `json:"email,omitempty"`
	FullName  *string     `json:"full_name,omitempty"`
	Id        *int64      `json:"id,omitempty"`
	Phone     *string     `json:"phone,omitempty"`
	Role      *UserRole   `json:"role,omitempty"`
	Status    *UserStatus `json:"status,omitempty"`
}

// UserRole defines model for UserRole.
type UserRole string

// UserStatus defines model for UserStatus.
type UserStatus string

// Vendor defines model for Vendor.
type Vendor struct {
	Address       *string       `json:"address,omitempty"`
	Amenities     *[]string     `json:"amenities,omitempty"`
	BusinessName  *string       `json:"business_name,omitempty"`
	BusinessType  *BusinessType `json:"business_type,omitempty"`
	City          *string       `json:"city,omitempty"`
	CoverImage    *string       `json:"cover_image,omitempty"`
	Description   *string       `json:"description,omitempty"`
	District      *string       `json:"district,omitempty"`
	Id            *int64        `json:"id,omitempty"`
	Latitude      *float64      `json:"latitude,omitempty"`
	Logo          *string       `json:"logo,omitempty"`
	Longitude     *float64      `json:"longitude,omitempty"`
	Phone         *string       `json:"phone,omitempty"`
	Photos        *[]string     `json:"photos,omitempty"`
	RatingAvg     *float64      `json:"rating_avg,omitempty"`
	Status        *VendorStatus `json:"status,omitempty"`
	TotalBookings *int          `json:"total_bookings,omitempty"`
	TotalReviews  *int          `json:"total_reviews,omitempty"`
	Verified      *bool         `json:"verified,omitempty"`
	Whatsapp      *string       `json:"whatsapp,omitempty"`
}

// VendorBooking defines model for VendorBooking.
type VendorBooking struct {
	BookingNumber *string `json:"booking_number,omitempty"`
	Child         *struct {
		Age   *int    `json:"age,omitempty"`
		Name  *string `json:"name,omitempty"`
		Photo *string `json:"photo,omitempty"`
	} `json:"child,omitempty"`
	Coach *struct {
		FullName *string `json:"full_name,omitempty"`
	} `json:"coach,omitempty"`
	Id     *int64 `json:"id,omitempty"`
	Parent *struct {
		FullName *string `json:"full_name,omitempty"`
		Phone    *string `json:"phone,omitempty"`
		Whatsapp *string `json:"whatsapp,omitempty"`
	} `json:"parent,omitempty"`
	ParentNotes *string `json:"parent_notes,omitempty"`
	Service     *struct {
		Name *string `json:"name,omitempty"`
	} `json:"service,omitempty"`
	Session *struct {
		EndTime       *string             `json:"end_time,omitempty"`
		SessionDate   *openapi_types.Date `json:"session_date,omitempty"`
		SessionNumber *int                `json:"session_number,omitempty"`
		StartTime     *string             `json:"start_time,omitempty"`
		Status        *SessionStatus      `json:"status,omitempty"`
	} `json:"session,omitempty"`
}

// VendorDashboard defines model for VendorDashboard.
type VendorDashboard struct {
	Overview *struct {
		ActiveCoaches   *int     `json:"active_coaches,omitempty"`
		PendingBookings *int     `json:"pending_bookings,omitempty"`
		RatingAvg       *float64 `json:"rating_avg,omitempty"`
		TotalReviews    *int     `json:"total_reviews,omitempty"`
		TotalServices   *int     `json:"total_services,omitempty"`
	} `json:"overview,omitempty"`
	ThisMonth *struct {
		NewCustomers  *int     `json:"new_customers,omitempty"`
		Revenue       *float64 `json:"revenue,omitempty"`
		TotalBookings *int     `json:"total_bookings,omitempty"`
	} `json:"this_month,omitempty"`
	ThisWeek *struct {
		NewCustomers  *int     `json:"new_customers,omitempty"`
		Revenue       *float64 `json:"revenue,omitempty"`
		TotalBookings *int     `json:"total_bookings,omitempty"`
	} `json:"this_week,omitempty"`
	Today *struct {
		CompletedSessions *int     `json:"completed_sessions,omitempty"`
		Revenue           *float64 `json:"revenue,omitempty"`
		TotalSessions     *int     `json:"total_sessions,omitempty"`
		UpcomingSessions  *int     `json:"upcoming_sessions,omitempty"`
	} `json:"today,omitempty"`
}

// VendorStatus defines model for VendorStatus.
type VendorStatus string

// AgeParam defines model for AgeParam.
type AgeParam = int

// BookingStatusParam defines model for BookingStatusParam.
type BookingStatusParam = BookingStatus

// CategoryParam defines model for CategoryParam.
type CategoryParam = string

// ChildIdParam defines model for ChildIdParam.
type ChildIdParam = int64

// CityParam defines model for CityParam.
type CityParam = string

// ClassTypeParam defines model for ClassTypeParam.
type ClassTypeParam string

// CoachIdParam defines model for CoachIdParam.
type CoachIdParam = int64

// DateParam defines model for DateParam.
type DateParam = openapi_types.Date

// DayParam defines model for DayParam.
type DayParam string

// DistrictParam defines model for DistrictParam.
type DistrictParam = string

// IdParam defines model for IdParam.
type IdParam = int64

// IsFeaturedParam defines model for IsFeaturedParam.
type IsFeaturedParam = bool

// LimitParam defines model for LimitParam.
type LimitParam = int

// MonthParam defines model for MonthParam.
type MonthParam = string

// PageParam defines model for PageParam.
type PageParam = int

// PaymentNumberParam defines model for PaymentNumberParam.
type PaymentNumberParam = string

// PeriodParam defines model for PeriodParam.
type PeriodParam string

// PriceMaxParam defines model for PriceMaxParam.
type PriceMaxParam = float64

// PriceMinParam defines model for PriceMinParam.
type PriceMinParam = float64

// RatingMinParam defines model for RatingMinParam.
type RatingMinParam = float64

// ReviewIdParam defines model for ReviewIdParam.
type ReviewIdParam = int64

// ServiceIdParam defines model for ServiceIdParam.
type ServiceIdParam = int64

// SessionIdParam defines model for SessionIdParam.
type SessionIdParam = int64

// SkillLevelParam defines model for SkillLevelParam.
type SkillLevelParam string

// UpcomingParam defines model for UpcomingParam.
type UpcomingParam = bool

// VendorStatusParam defines model for VendorStatusParam.
type VendorStatusParam = VendorStatus

// AdminVendorsResponse defines model for AdminVendorsResponse.
type AdminVendorsResponse struct {
	Data struct {
		Pagination *Pagination `json:"pagination,omitempty"`
		Vendors    *[]struct {
			Address       *string       `json:"address,omitempty"`
			Amenities     *[]string     `json:"amenities,omitempty"`
			BusinessName  *string       `json:"business_name,omitempty"`
			BusinessType  *BusinessType `json:"business_type,omitempty"`
			City          *string       `json:"city,omitempty"`
			CoverImage    *string       `json:"cover_image,omitempty"`
			CreatedAt     *time.Time    `json:"created_at,omitempty"`
			Description   *string       `json:"description,omitempty"`
			District      *string       `json:"district,omitempty"`
			Id            *int64        `json:"id,omitempty"`
			Latitude      *float64      `json:"latitude,omitempty"`
			Logo          *string       `json:"logo,omitempty"`
			Longitude     *float64      `json:"longitude,omitempty"`
			Phone         *string       `json:"phone,omitempty"`
			Photos        *[]string     `json:"photos,omitempty"`
			RatingAvg     *float64      `json:"rating_avg,omitempty"`
			Status        *VendorStatus `json:"status,omitempty"`
			TotalBookings *int          `json:"total_bookings,omitempty"`
			TotalReviews  *int          `json:"total_reviews,omitempty"`
			User          *struct {
				Email    *string `json:"email,omitempty"`
				FullName *string `json:"full_name,omitempty"`
				Phone    *string `json:"phone,omitempty"`
			} `json:"user,omitempty"`
			Verified *bool   `json:"verified,omitempty"`
			Whatsapp *string `json:"whatsapp,omitempty"`
		} `json:"vendors,omitempty"`
	} `json:"data"`
}

// BadRequestResponse defines model for BadRequestResponse.
type BadRequestResponse = DefaultErrorResponse

// BookingCancelledResponse defines model for BookingCancelledResponse.
type BookingCancelledResponse struct {
	Data struct {
		Booking *struct {
			RefundAmount *float64       `json:"refund_amount,omitempty"`
			RefundStatus *string        `json:"refund_status,omitempty"`
			Status       *BookingStatus `json:"status,omitempty"`
		} `json:"booking,omitempty"`
	} `json:"data"`
	Message *string `json:"message,omitempty"`
}

// BookingCreatedResponse defines model for BookingCreatedResponse.
type BookingCreatedResponse struct {
	Data struct {
		Booking *BookingDetail `json:"booking,omitempty"`
	} `json:"data"`
	Message *string `json:"message,omitempty"`
}

// BookingDetailResponse defines model for BookingDetailResponse.
type BookingDetailResponse struct {
	Data BookingDetail `json:"data"`
}

// BookingsListResponse defines model for BookingsListResponse.
type BookingsListResponse struct {
	Data []Booking `json:"data"`
}

// CategoriesResponse defines model for CategoriesResponse.
type CategoriesResponse struct {
	Data []Category `json:"data"`
}

// ChildResponse defines model for ChildResponse.
type ChildResponse struct {
	Data Child `json:"data"`
}

// ChildrenListResponse defines model for ChildrenListResponse.
type ChildrenListResponse struct {
	Data []Child `json:"data"`
}

// CoachCreatedResponse defines model for CoachCreatedResponse.
type CoachCreatedResponse struct {
	Data struct {
		Coach *Coach `json:"coach,omitempty"`
	} `json:"data"`
}

// ConflictResponse defines model for ConflictResponse.
type ConflictResponse = DefaultErrorResponse

// ForbiddenResponse defines model for ForbiddenResponse.
type ForbiddenResponse = DefaultErrorResponse

// InternalServerErrorResponse defines model for InternalServerErrorResponse.
type InternalServerErrorResponse = DefaultErrorResponse

// LoginResponse defines model for LoginResponse.
type LoginResponse struct {
	Data struct {
		Token string `json:"token"`
		User  User   `json:"user"`
	} `json:"data"`
}

// NotFoundResponse defines model for NotFoundResponse.
type NotFoundResponse = DefaultErrorResponse

// PaymentMethodsResponse defines model for PaymentMethodsResponse.
type PaymentMethodsResponse struct {
	Data []PaymentMethod `json:"data"`
}

// PaymentStatusResponse defines model for PaymentStatusResponse.
type PaymentStatusResponse struct {
	Data struct {
		Amount  *float64 `json:"amount,omitempty"`
		Booking *struct {
			BookingNumber *string        `json:"booking_number,omitempty"`
			Status        *BookingStatus `json:"status,omitempty"`
		} `json:"booking,omitempty"`
		PaidAt        *time.Time `json:"paid_at,omitempty"`
		PaymentMethod *string    `json:"payment_method,omitempty"`
		PaymentNumber *string    `json:"payment_number,omitempty"`
		Status        *string    `json:"status,omitempty"`
	} `json:"data"`
}

// RegisterResponse defines model for RegisterResponse.
type RegisterResponse struct {
	Data struct {
		Token string `json:"token"`
		User  User   `json:"user"`
	} `json:"data"`
	Message *string `json:"message,omitempty"`
}

// RegisterVendorResponse defines model for RegisterVendorResponse.
type RegisterVendorResponse struct {
	Data struct {
		User   User   `json:"user"`
		Vendor Vendor `json:"vendor"`
	} `json:"data"`
	Message *string `json:"message,omitempty"`
}

// ReviewCreatedResponse defines model for ReviewCreatedResponse.
type ReviewCreatedResponse struct {
	Data struct {
		Review *Review `json:"review,omitempty"`
	} `json:"data"`
	Message *string `json:"message,omitempty"`
}

// ScheduleCreatedResponse defines model for ScheduleCreatedResponse.
type ScheduleCreatedResponse struct {
	Data struct {
		Schedule *Schedule `json:"schedule,omitempty"`
	} `json:"data"`
}

// ScheduleExceptionCreatedResponse defines model for ScheduleExceptionCreatedResponse.
type ScheduleExceptionCreatedResponse struct {
	Data struct {
		Message *string `json:"message,omitempty"`
	} `json:"data"`
}

// ServiceAvailabilityResponse defines model for ServiceAvailabilityResponse.
type ServiceAvailabilityResponse struct {
	Data struct {
		AvailableDates *[]AvailableDate `json:"available_dates,omitempty"`
		Exceptions     *[]struct {
			Date   *openapi_types.Date `json:"date,omitempty"`
			Reason *string             `json:"reason,omitempty"`
		} `json:"exceptions,omitempty"`
	} `json:"data"`
}

// ServiceCreatedResponse defines model for ServiceCreatedResponse.
type ServiceCreatedResponse struct {
	Data struct {
		Service *Service `json:"service,omitempty"`
	} `json:"data"`
}

// ServiceDetailResponse defines model for ServiceDetailResponse.
type ServiceDetailResponse struct {
	Data ServiceDetail `json:"data"`
}

// ServiceReviewsResponse defines model for ServiceReviewsResponse.
type ServiceReviewsResponse struct {
	Data struct {
		Pagination *Pagination    `json:"pagination,omitempty"`
		Reviews    *[]Review      `json:"reviews,omitempty"`
		Summary    *ReviewSummary `json:"summary,omitempty"`
	} `json:"data"`
}

// ServiceUpdatedResponse defines model for ServiceUpdatedResponse.
type ServiceUpdatedResponse struct {
	Data struct {
		Service *Service `json:"service,omitempty"`
	} `json:"data"`
}

// ServicesSearchResponse defines model for ServicesSearchResponse.
type ServicesSearchResponse struct {
	Data struct {
		Pagination *Pagination          `json:"pagination,omitempty"`
		Services   *[]ServiceWithVendor `json:"services,omitempty"`
	} `json:"data"`
}

// SessionCompletedResponse defines model for SessionCompletedResponse.
type SessionCompletedResponse struct {
	Data struct {
		Session *BookingSession `json:"session,omitempty"`
	} `json:"data"`
	Message *string `json:"message,omitempty"`
}

// StatisticsResponse defines model for StatisticsResponse.
type StatisticsResponse struct {
	Data Statistics `json:"data"`
}

// SuccessResponse defines model for SuccessResponse.
type SuccessResponse = map[string]interface{}

// UnauthorizedResponse defines model for UnauthorizedResponse.
type UnauthorizedResponse = DefaultErrorResponse

// VendorBookingsResponse defines model for VendorBookingsResponse.
type VendorBookingsResponse struct {
	Data []VendorBooking `json:"data"`
}

// VendorCoachesResponse defines model for VendorCoachesResponse.
type VendorCoachesResponse struct {
	Data []Coach `json:"data"`
}

// VendorDashboardResponse defines model for VendorDashboardResponse.
type VendorDashboardResponse struct {
	Data VendorDashboard `json:"data"`
}

// VendorServicesResponse defines model for VendorServicesResponse.
type VendorServicesResponse struct {
	Data struct {
		Pagination *Pagination `json:"pagination,omitempty"`
		Services   *[]Service  `json:"services,omitempty"`
	} `json:"data"`
}

// AddChildRequest defines model for AddChildRequest.
type AddChildRequest struct {
	DateOfBirth  openapi_types.Date `json:"date_of_birth"`
	Gender       Gender             `json:"gender"`
	Name         string             `json:"name"`
	Nickname     *string            `json:"nickname,omitempty"`
	SpecialNeeds *string            `json:"special_needs,omitempty"`
}

// AddCoachRequest defines model for AddCoachRequest.
type AddCoachRequest struct {
	Bio            *string `json:"bio,omitempty"`
	Certifications *[]struct {
		Issuer *string `json:"issuer,omitempty"`
		Name   *string `json:"name,omitempty"`
		Year   *int    `json:"year,omitempty"`
	} `json:"certifications,omitempty"`
	Education       *string             `json:"education,omitempty"`
	Email           openapi_types.Email `json:"email"`
	ExperienceYears *int                `json:"experience_years,omitempty"`
	FullName        string              `json:"full_name"`
	Phone           string              `json:"phone"`
	Specializations *[]string           `json:"specializations,omitempty"`
}

// AddScheduleExceptionRequest defines model for AddScheduleExceptionRequest.
type AddScheduleExceptionRequest struct {
	ExceptionDate openapi_types.Date `json:"exception_date"`
	Reason        string             `json:"reason"`
}

// AddScheduleRequest defines model for AddScheduleRequest.
type AddScheduleRequest struct {
	AvailableSlots int    `json:"available_slots"`
	CoachId        *int64 `json:"coach_id,omitempty"`
	DayOfWeek      int    `json:"day_of_week"`
	EndTime        string `json:"end_time"`
	StartTime      string `json:"start_time"`
}

// AssignCoachRequest defines model for AssignCoachRequest.
type AssignCoachRequest struct {
	CoachId   int64 `json:"coach_id"`
	IsPrimary *bool `json:"is_primary,omitempty"`
}

// CancelBookingRequest defines model for CancelBookingRequest.
type CancelBookingRequest struct {
	CancellationReason string `json:"cancellation_reason"`
}

// CompleteSessionRequest defines model for CompleteSessionRequest.
type CompleteSessionRequest struct {
	Attended   bool    `json:"attended"`
	CoachNotes *string `json:"coach_notes,omitempty"`
}

// CreateBookingRequest defines model for CreateBookingRequest.
type CreateBookingRequest struct {
	BookingType BookingType `json:"booking_type"`
	ChildId     int64       `json:"child_id"`
	CoachId     *int64      `json:"coach_id,omitempty"`
	ParentNotes *string     `json:"parent_notes,omitempty"`
	ServiceId   int64       `json:"service_id"`
	Sessions    []struct {
		EndTime     *string            `json:"end_time,omitempty"`
		ScheduleId  *int64             `json:"schedule_id,omitempty"`
		SessionDate openapi_types.Date `json:"session_date"`
		StartTime   string             `json:"start_time"`
	} `json:"sessions"`
}

// CreateReviewRequest defines model for CreateReviewRequest.
type CreateReviewRequest struct {
	BookingId      int64   `json:"booking_id"`
	ChildEnjoyed   *bool   `json:"child_enjoyed,omitempty"`
	Rating         int     `json:"rating"`
	ReviewText     *string `json:"review_text,omitempty"`
	WouldRecommend *bool   `json:"would_recommend,omitempty"`
}

// CreateServiceRequest defines model for CreateServiceRequest.
type CreateServiceRequest struct {
	AgeMax          *int        `json:"age_max,omitempty"`
	AgeMin          *int        `json:"age_min,omitempty"`
	CategoryId      int64       `json:"category_id"`
	ClassType       ClassType   `json:"class_type"`
	Description     string      `json:"description"`
	DurationMinutes int         `json:"duration_minutes"`
	MaxParticipants *int        `json:"max_participants,omitempty"`
	Name            string      `json:"name"`
	Package12Price  *float64    `json:"package_12_price,omitempty"`
	Package4Price   *float64    `json:"package_4_price,omitempty"`
	Package8Price   *float64    `json:"package_8_price,omitempty"`
	PricePerSession float64     `json:"price_per_session"`
	Requirements    *string     `json:"requirements,omitempty"`
	SkillLevel      *SkillLevel `json:"skill_level,omitempty"`
	TrialPrice      *float64    `json:"trial_price,omitempty"`
	WhatWillLearn   *string     `json:"what_will_learn,omitempty"`
}

// LoginRequest defines model for LoginRequest.
type LoginRequest struct {
	Email    openapi_types.Email `json:"email"`
	Password string              `json:"password"`
}

// PaymentCallbackRequest defines model for PaymentCallbackRequest.
type PaymentCallbackRequest struct {
	GrossAmount       *string `json:"gross_amount,omitempty"`
	OrderId           *string `json:"order_id,omitempty"`
	StatusCode        *string `json:"status_code,omitempty"`
	TransactionStatus *string `json:"transaction_status,omitempty"`
}

// RegisterParentRequest defines model for RegisterParentRequest.
type RegisterParentRequest struct {
	City     *string             `json:"city,omitempty"`
	District *string             `json:"district,omitempty"`
	Email    openapi_types.Email `json:"email"`
	FullName string              `json:"full_name"`
	Password string              `json:"password"`
	Phone    string              `json:"phone"`
}

// RegisterVendorRequest defines model for RegisterVendorRequest.
type RegisterVendorRequest struct {
	Address      string              `json:"address"`
	BusinessName string              `json:"business_name"`
	BusinessType BusinessType        `json:"business_type"`
	City         string              `json:"city"`
	District     *string             `json:"district,omitempty"`
	Email        openapi_types.Email `json:"email"`
	FullName     string              `json:"full_name"`
	Password     string              `json:"password"`
	Phone        string              `json:"phone"`
	Whatsapp     *string             `json:"whatsapp,omitempty"`
}

// RejectVendorRequest defines model for RejectVendorRequest.
type RejectVendorRequest struct {
	Reason string `json:"reason"`
}

// RespondToReviewRequest defines model for RespondToReviewRequest.
type RespondToReviewRequest struct {
	Response string `json:"response"`
}

// UpdateChildRequest defines model for UpdateChildRequest.
type UpdateChildRequest struct {
	Name         *string `json:"name,omitempty"`
	Nickname     *string `json:"nickname,omitempty"`
	SpecialNeeds *string `json:"special_needs,omitempty"`
}

// UpdateServiceRequest defines model for UpdateServiceRequest.
type UpdateServiceRequest struct {
	Description     *string        `json:"description,omitempty"`
	Name            *string        `json:"name,omitempty"`
	PricePerSession *float64       `json:"price_per_session,omitempty"`
	Status          *ServiceStatus `json:"status,omitempty"`
	TrialPrice      *float64       `json:"trial_price,omitempty"`
}

// GetStatisticsParams defines parameters for GetStatistics.
type GetStatisticsParams struct {
	Period *GetStatisticsParamsPeriod `form:"period,omitempty" json:"period,omitempty"`
}

// GetStatisticsParamsPeriod defines parameters for GetStatistics.
type GetStatisticsParamsPeriod string

// GetVendorsParams defines parameters for GetVendors.
type GetVendorsParams struct {
	Status *VendorStatusParam `form:"status,omitempty" json:"status,omitempty"`
	Page   *PageParam         `form:"page,omitempty" json:"page,omitempty"`
	Limit  *LimitParam        `form:"limit,omitempty" json:"limit,omitempty"`
}

// RejectVendorJSONBody defines parameters for RejectVendor.
type RejectVendorJSONBody struct {
	Reason string `json:"reason"`
}

// LoginUserJSONBody defines parameters for LoginUser.
type LoginUserJSONBody struct {
	Email    openapi_types.Email `json:"email"`
	Password string              `json:"password"`
}

// RegisterParentJSONBody defines parameters for RegisterParent.
type RegisterParentJSONBody struct {
	City     *string             `json:"city,omitempty"`
	District *string             `json:"district,omitempty"`
	Email    openapi_types.Email `json:"email"`
	FullName string              `json:"full_name"`
	Password string              `json:"password"`
	Phone    string              `json:"phone"`
}

// RegisterVendorJSONBody defines parameters for RegisterVendor.
type RegisterVendorJSONBody struct {
	Address      string              `json:"address"`
	BusinessName string              `json:"business_name"`
	BusinessType BusinessType        `json:"business_type"`
	City         string              `json:"city"`
	District     *string             `json:"district,omitempty"`
	Email        openapi_types.Email `json:"email"`
	FullName     string              `json:"full_name"`
	Password     string              `json:"password"`
	Phone        string              `json:"phone"`
	Whatsapp     *string             `json:"whatsapp,omitempty"`
}

// GetBookingsParams defines parameters for GetBookings.
type GetBookingsParams struct {
	Status   *BookingStatusParam `form:"status,omitempty" json:"status,omitempty"`
	ChildId  *ChildIdParam       `form:"child_id,omitempty" json:"child_id,omitempty"`
	Upcoming *UpcomingParam      `form:"upcoming,omitempty" json:"upcoming,omitempty"`
	Page     *PageParam          `form:"page,omitempty" json:"page,omitempty"`
	Limit    *LimitParam         `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateBookingJSONBody defines parameters for CreateBooking.
type CreateBookingJSONBody struct {
	BookingType BookingType `json:"booking_type"`
	ChildId     int64       `json:"child_id"`
	CoachId     *int64      `json:"coach_id,omitempty"`
	ParentNotes *string     `json:"parent_notes,omitempty"`
	ServiceId   int64       `json:"service_id"`
	Sessions    []struct {
		EndTime     *string            `json:"end_time,omitempty"`
		ScheduleId  *int64             `json:"schedule_id,omitempty"`
		SessionDate openapi_types.Date `json:"session_date"`
		StartTime   string             `json:"start_time"`
	} `json:"sessions"`
}

// CancelBookingJSONBody defines parameters for CancelBooking.
type CancelBookingJSONBody struct {
	CancellationReason string `json:"cancellation_reason"`
}

// AddChildJSONBody defines parameters for AddChild.
type AddChildJSONBody struct {
	DateOfBirth  openapi_types.Date `json:"date_of_birth"`
	Gender       Gender             `json:"gender"`
	Name         string             `json:"name"`
	Nickname     *string            `json:"nickname,omitempty"`
	SpecialNeeds *string            `json:"special_needs,omitempty"`
}

// UpdateChildJSONBody defines parameters for UpdateChild.
type UpdateChildJSONBody struct {
	Name         *string `json:"name,omitempty"`
	Nickname     *string `json:"nickname,omitempty"`
	SpecialNeeds *string `json:"special_needs,omitempty"`
}

// PaymentCallbackJSONBody defines parameters for PaymentCallback.
type PaymentCallbackJSONBody struct {
	GrossAmount       *string `json:"gross_amount,omitempty"`
	OrderId           *string `json:"order_id,omitempty"`
	StatusCode        *string `json:"status_code,omitempty"`
	TransactionStatus *string `json:"transaction_status,omitempty"`
}

// CreateReviewJSONBody defines parameters for CreateReview.
type CreateReviewJSONBody struct {
	BookingId      int64   `json:"booking_id"`
	ChildEnjoyed   *bool   `json:"child_enjoyed,omitempty"`
	Rating         int     `json:"rating"`
	ReviewText     *string `json:"review_text,omitempty"`
	WouldRecommend *bool   `json:"would_recommend,omitempty"`
}

// SearchServicesParams defines parameters for SearchServices.
type SearchServicesParams struct {
	// Category Category slug (swimming, math-tutoring, art-drawing)
	Category *CategoryParam `form:"category,omitempty" json:"category,omitempty"`
	City     *CityParam     `form:"city,omitempty" json:"city,omitempty"`
	District *DistrictParam `form:"district,omitempty" json:"district,omitempty"`

	// Age Child age in years
	Age        *AgeParam                       `form:"age,omitempty" json:"age,omitempty"`
	SkillLevel *SearchServicesParamsSkillLevel `form:"skill_level,omitempty" json:"skill_level,omitempty"`
	ClassType  *SearchServicesParamsClassType  `form:"class_type,omitempty" json:"class_type,omitempty"`
	Day        *SearchServicesParamsDay        `form:"day,omitempty" json:"day,omitempty"`
	PriceMin   *PriceMinParam                  `form:"price_min,omitempty" json:"price_min,omitempty"`
	PriceMax   *PriceMaxParam                  `form:"price_max,omitempty" json:"price_max,omitempty"`
	RatingMin  *RatingMinParam                 `form:"rating_min,omitempty" json:"rating_min,omitempty"`
	IsFeatured *IsFeaturedParam                `form:"is_featured,omitempty" json:"is_featured,omitempty"`
	Page       *PageParam                      `form:"page,omitempty" json:"page,omitempty"`
	Limit      *LimitParam                     `form:"limit,omitempty" json:"limit,omitempty"`
}

// SearchServicesParamsSkillLevel defines parameters for SearchServices.
type SearchServicesParamsSkillLevel string

// SearchServicesParamsClassType defines parameters for SearchServices.
type SearchServicesParamsClassType string

// SearchServicesParamsDay defines parameters for SearchServices.
type SearchServicesParamsDay string

// GetServiceAvailabilityParams defines parameters for GetServiceAvailability.
type GetServiceAvailabilityParams struct {
	// Month Month in YYYY-MM format
	Month MonthParam `form:"month" json:"month"`
}

// GetServiceReviewsParams defines parameters for GetServiceReviews.
type GetServiceReviewsParams struct {
	Page  *PageParam  `form:"page,omitempty" json:"page,omitempty"`
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// GetVendorBookingsParams defines parameters for GetVendorBookings.
type GetVendorBookingsParams struct {
	Date   *DateParam          `form:"date,omitempty" json:"date,omitempty"`
	Status *BookingStatusParam `form:"status,omitempty" json:"status,omitempty"`
	Page   *PageParam          `form:"page,omitempty" json:"page,omitempty"`
	Limit  *LimitParam         `form:"limit,omitempty" json:"limit,omitempty"`
}

// AddCoachJSONBody defines parameters for AddCoach.
type AddCoachJSONBody struct {
	Bio            *string `json:"bio,omitempty"`
	Certifications *[]struct {
		Issuer *string `json:"issuer,omitempty"`
		Name   *string `json:"name,omitempty"`
		Year   *int    `json:"year,omitempty"`
	} `json:"certifications,omitempty"`
	Education       *string             `json:"education,omitempty"`
	Email           openapi_types.Email `json:"email"`
	ExperienceYears *int                `json:"experience_years,omitempty"`
	FullName        string              `json:"full_name"`
	Phone           string              `json:"phone"`
	Specializations *[]string           `json:"specializations,omitempty"`
}

// RespondToReviewJSONBody defines parameters for RespondToReview.
type RespondToReviewJSONBody struct {
	Response string `json:"response"`
}

// AddScheduleExceptionJSONBody defines parameters for AddScheduleException.
type AddScheduleExceptionJSONBody struct {
	ExceptionDate openapi_types.Date `json:"exception_date"`
	Reason        string             `json:"reason"`
}

// GetVendorServicesParams defines parameters for GetVendorServices.
type GetVendorServicesParams struct {
	Page  *PageParam  `form:"page,omitempty" json:"page,omitempty"`
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateServiceJSONBody defines parameters for CreateService.
type CreateServiceJSONBody struct {
	AgeMax          *int        `json:"age_max,omitempty"`
	AgeMin          *int        `json:"age_min,omitempty"`
	CategoryId      int64       `json:"category_id"`
	ClassType       ClassType   `json:"class_type"`
	Description     string      `json:"description"`
	DurationMinutes int         `json:"duration_minutes"`
	MaxParticipants *int        `json:"max_participants,omitempty"`
	Name            string      `json:"name"`
	Package12Price  *float64    `json:"package_12_price,omitempty"`
	Package4Price   *float64    `json:"package_4_price,omitempty"`
	Package8Price   *float64    `json:"package_8_price,omitempty"`
	PricePerSession float64     `json:"price_per_session"`
	Requirements    *string     `json:"requirements,omitempty"`
	SkillLevel      *SkillLevel `json:"skill_level,omitempty"`
	TrialPrice      *float64    `json:"trial_price,omitempty"`
	WhatWillLearn   *string     `json:"what_will_learn,omitempty"`
}

// UpdateServiceJSONBody defines parameters for UpdateService.
type UpdateServiceJSONBody struct {
	Description     *string        `json:"description,omitempty"`
	Name            *string        `json:"name,omitempty"`
	PricePerSession *float64       `json:"price_per_session,omitempty"`
	Status          *ServiceStatus `json:"status,omitempty"`
	TrialPrice      *float64       `json:"trial_price,omitempty"`
}

// AssignCoachToServiceJSONBody defines parameters for AssignCoachToService.
type AssignCoachToServiceJSONBody struct {
	CoachId   int64 `json:"coach_id"`
	IsPrimary *bool `json:"is_primary,omitempty"`
}

// AddScheduleJSONBody defines parameters for AddSchedule.
type AddScheduleJSONBody struct {
	AvailableSlots int    `json:"available_slots"`
	CoachId        *int64 `json:"coach_id,omitempty"`
	DayOfWeek      int    `json:"day_of_week"`
	EndTime        string `json:"end_time"`
	StartTime      string `json:"start_time"`
}

// CompleteSessionJSONBody defines parameters for CompleteSession.
type CompleteSessionJSONBody struct {
	Attended   bool    `json:"attended"`
	CoachNotes *string `json:"coach_notes,omitempty"`
}

// RejectVendorJSONRequestBody defines body for RejectVendor for application/json ContentType.
type RejectVendorJSONRequestBody RejectVendorJSONBody

// LoginUserJSONRequestBody defines body for LoginUser for application/json ContentType.
type LoginUserJSONRequestBody LoginUserJSONBody

// RegisterParentJSONRequestBody defines body for RegisterParent for application/json ContentType.
type RegisterParentJSONRequestBody RegisterParentJSONBody

// RegisterVendorJSONRequestBody defines body for RegisterVendor for application/json ContentType.
type RegisterVendorJSONRequestBody RegisterVendorJSONBody

// CreateBookingJSONRequestBody defines body for CreateBooking for application/json ContentType.
type CreateBookingJSONRequestBody CreateBookingJSONBody

// CancelBookingJSONRequestBody defines body for CancelBooking for application/json ContentType.
type CancelBookingJSONRequestBody CancelBookingJSONBody

// AddChildJSONRequestBody defines body for AddChild for application/json ContentType.
type AddChildJSONRequestBody AddChildJSONBody

// UpdateChildJSONRequestBody defines body for UpdateChild for application/json ContentType.
type UpdateChildJSONRequestBody UpdateChildJSONBody

// PaymentCallbackJSONRequestBody defines body for PaymentCallback for application/json ContentType.
type PaymentCallbackJSONRequestBody PaymentCallbackJSONBody

// CreateReviewJSONRequestBody defines body for CreateReview for application/json ContentType.
type CreateReviewJSONRequestBody CreateReviewJSONBody

// AddCoachJSONRequestBody defines body for AddCoach for application/json ContentType.
type AddCoachJSONRequestBody AddCoachJSONBody

// RespondToReviewJSONRequestBody defines body for RespondToReview for application/json ContentType.
type RespondToReviewJSONRequestBody RespondToReviewJSONBody

// AddScheduleExceptionJSONRequestBody defines body for AddScheduleException for application/json ContentType.
type AddScheduleExceptionJSONRequestBody AddScheduleExceptionJSONBody

// CreateServiceJSONRequestBody defines body for CreateService for application/json ContentType.
type CreateServiceJSONRequestBody CreateServiceJSONBody

// UpdateServiceJSONRequestBody defines body for UpdateService for application/json ContentType.
type UpdateServiceJSONRequestBody UpdateServiceJSONBody

// AssignCoachToServiceJSONRequestBody defines body for AssignCoachToService for application/json ContentType.
type AssignCoachToServiceJSONRequestBody AssignCoachToServiceJSONBody

// AddScheduleJSONRequestBody defines body for AddSchedule for application/json ContentType.
type AddScheduleJSONRequestBody AddScheduleJSONBody

// CompleteSessionJSONRequestBody defines body for CompleteSession for application/json ContentType.
type CompleteSessionJSONRequestBody CompleteSessionJSONBody

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
